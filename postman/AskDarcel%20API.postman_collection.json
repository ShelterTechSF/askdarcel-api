{
	"info": {
		"name": "AskDarcel API",
		"_postman_id": "3f01a518-a80a-cec3-b7a1-8b3809f54a95",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all resources",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Status code is 400\"] = responseCode.code === 400;  // category_id param is required"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/resources",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all resources by category id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7aaa1f1-2856-41ab-9348-70c77ce1bea7",
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1500ms\"] = responseTime < 1500;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"resources\": {",
							"            \"type\": \"array\",",
							"            \"items\": pm.globals.get('schemas').resource,",
							"        },",
							"    },",
							"    \"required\": [",
							"        \"resources\",",
							"    ],",
							"};",
							"",
							"var response = pm.response.json();",
							"tests['Schema is valid'] = tv4.validate(response, schema);",
							"if (tv4.error) {",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/resources?category_id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources"
					],
					"query": [
						{
							"key": "category_id",
							"value": "1",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get resource by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6a1511dd-606d-49b2-a0b9-97ede77c1ede",
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Global variable schemas is not null\"] = pm.globals.get('schemas').resource;",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"resource\": pm.globals.get('schemas').resource,",
							"    },",
							"    \"required\": [",
							"        \"resource\",",
							"    ],",
							"};",
							"",
							"var response = pm.response.json();",
							"tests['Schema is valid'] = tv4.validate(response, schema);",
							"if (tv4.error) {",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/resources/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1403ee77-8baa-486c-aff1-5d081b1b2b2f",
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"categories\": {",
							"            \"type\": \"array\",",
							"            \"items\": pm.globals.get('schemas').category,",
							"        },",
							"    },",
							"    \"required\": [",
							"        \"categories\",",
							"    ],",
							"};",
							"",
							"var response = pm.response.json();",
							"tests['Schema is valid'] = tv4.validate(response, schema);",
							"if (tv4.error) {",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/categories",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all eligibilities",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/eligibilities",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"eligibilities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search for resources",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da838534-2701-4102-8166-120692b1bddf",
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1500ms\"] = responseTime < 1500;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"resources\": {",
							"            \"type\": \"array\",",
							"            \"items\": pm.globals.get('schemas').resource,",
							"        },",
							"    },",
							"    \"required\": [",
							"        \"resources\",",
							"    ],",
							"};",
							"",
							"var response = pm.response.json();",
							"tests['Schema is valid'] = tv4.validate(response, schema);",
							"if (tv4.error) {",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/resources/search?query=food",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources",
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": "food",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all resources by category id and sort by location",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b690aa0e-55a5-409a-a6bd-31beca0a73e8",
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1500ms\"] = responseTime < 1500;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"resources\": {",
							"            \"type\": \"array\",",
							"            \"items\": pm.globals.get('schemas').resource,",
							"        },",
							"    },",
							"    \"required\": [",
							"        \"resources\",",
							"    ],",
							"};",
							"",
							"var response = pm.response.json();",
							"tests['Schema is valid'] = tv4.validate(response, schema);",
							"if (tv4.error) {",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/resources?category_id=1&lat=100&long=100",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources"
					],
					"query": [
						{
							"key": "category_id",
							"value": "1",
							"equals": true
						},
						{
							"key": "lat",
							"value": "100",
							"equals": true
						},
						{
							"key": "long",
							"value": "100",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search for resources and sort by location",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "086c9599-910b-464d-9a3e-bb14ce4cb1cd",
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1500ms\"] = responseTime < 1500;",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"resources\": {",
							"            \"type\": \"array\",",
							"            \"items\": pm.globals.get('schemas').resource,",
							"        },",
							"    },",
							"    \"required\": [",
							"        \"resources\",",
							"    ],",
							"};",
							"",
							"var response = pm.response.json();",
							"tests['Schema is valid'] = tv4.validate(response, schema);",
							"if (tv4.error) {",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/resources/search?query=food&lat=100&long=100",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources",
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": "food",
							"equals": true
						},
						{
							"key": "lat",
							"value": "100",
							"equals": true
						},
						{
							"key": "long",
							"value": "100",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Resource ChangeRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\" : {\n\t\t\"website\" : \"www.google.com\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/resources/1/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources",
						"1",
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Service ChangeRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\" : {\n\t\t\"name\" : \"newname\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/services/1/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"services",
						"1",
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Schedule Day ChangeRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\" : {\n\t\t\"opens_at\" : \"1000\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/schedule_days/1/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"schedule_days",
						"1",
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Note ChangeRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\" : {\n\t\t\"note\" : \"newnote\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/notes/1/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"notes",
						"1",
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Phone ChangeRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\" : {\n\t\t\"number\" : \"4155555267\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/phones/1/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"phones",
						"1",
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Address ChangeRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\" : {\n\t\t\"city\" : \"Selma\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/addresses/1/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"addresses",
						"1",
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit New Service Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"services\": [\n    {\n      \"name\": \"Foo Service\",\n      \"long_description\": \"Bar description\",\n      \"eligibility\": \"foo\",\n      \"required_documents\": \"bar\",\n      \"fee\": \"foo\",\n      \"application_process\": \"bar\",\n      \"schedule\": {\n        \"schedule_days\": [\n          {\n            \"day\": \"Friday\",\n            \"opens_at\": 9,\n            \"closes_at\": 17\n          },\n          {\n            \"day\": \"Thursday\",\n            \"opens_at\": 9,\n            \"closes_at\": 17\n          },\n          {\n            \"day\": \"Wednesday\",\n            \"opens_at\": 9,\n            \"closes_at\": 17\n          },\n          {\n            \"day\": \"Tuesday\",\n            \"opens_at\": 11,\n            \"closes_at\": 19\n          },\n          {\n            \"day\": \"Monday\",\n            \"opens_at\": 11,\n            \"closes_at\": 19\n          }\n        ]\n      },\n      \"notes\": [\n        {\n          \"note\": \"foo\"\n        }\n      ],\n      \"categories\": [\n        {\n          \"id\": 3\n        }\n      ]\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{base_url}}/resources/1/services",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources",
						"1",
						"services"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Note to Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"note\" : {\n\t\t\"note\" : \"harro\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/services/1/notes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"services",
						"1",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Note to Resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"note\" : {\n\t\t\"note\" : \"harro\"\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/resources/1/notes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"resources",
						"1",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Phone to Resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\": {\n\t\t\"number\": \"(415) 555-5555\",\n\t\t\"service_type\": \"general inquiries\"\n\t},\n\t\"type\": \"phones\",\n\t\"parent_resource_id\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Schedule Day",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"change_request\": {\n\t\t\"day\": \"Monday\",\n\t\t\"opens_at\" : \"1000\",\n\t\t\"closes_at\" : \"2000\"\n\t},\n\t\"type\": \"schedule_days\",\n\t\"schedule_id\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Service Category",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Response time is less than 1000ms\"] = responseTime < 1000;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"change_request\": {\n\t\t\"categories\": [\n\t\t\t{\"name\": \"Food\", \"id\": 2},\n\t\t\t{\"name\": \"Health\", \"id\": 3}\n\t\t]\n\t}\n}"
				},
				"url": {
					"raw": "{{base_url}}/services/1/change_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"services",
						"1",
						"change_requests"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d9a0b919-0685-4116-94c5-08a77896e5c5",
				"type": "text/javascript",
				"exec": [
					"var idSchema = {",
					"    \"type\": \"integer\",",
					"    \"minimum\": 1,",
					"}",
					"",
					"var addressSchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"address_1\": {\"type\": \"string\"},",
					"        \"address_2\": {\"type\": [\"string\", \"null\"]},",
					"        \"address_3\": {\"type\": [\"string\", \"null\"]},",
					"        \"address_4\": {\"type\": [\"string\", \"null\"]},",
					"        \"attention\": {\"type\": \"string\"},",
					"        \"city\": {\"type\": \"string\"},",
					"        \"country\": {\"type\": \"string\"},",
					"        \"id\": idSchema,",
					"        \"latitude\": {\"type\": \"string\"},  // Why is this not a number?",
					"        \"longitude\": {\"type\": \"string\"},",
					"        \"postal_code\": {\"type\": \"string\"},",
					"        \"state_province\": {\"type\": \"string\"},",
					"    },",
					"    \"required\": [",
					"        \"address_1\",",
					"        \"city\",",
					"        \"country\",",
					"        \"id\",",
					"        \"state_province\",",
					"    ],",
					"};",
					"",
					"var categorySchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"id\": idSchema,",
					"        \"name\": {\"type\": \"string\"},",
					"    },",
					"    \"required\": [\"id\", \"name\"],",
					"};",
					"",
					"var noteSchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"id\": idSchema,",
					"        \"note\": {\"type\": \"string\"},",
					"    },",
					"    \"required\": [\"id\", \"note\"],",
					"};",
					"",
					"var phoneSchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"country_code\": {\"type\": \"string\"},",
					"        \"extension\": {\"type\": [\"string\", \"null\"]},",
					"        \"id\": idSchema,",
					"        \"number\": {\"type\": \"string\"},",
					"        \"service_type\": {\"type\": \"string\"},",
					"    },",
					"    \"required\": [\"country_code\", \"extension\", \"id\", \"number\", \"service_type\"],",
					"};",
					"",
					"var timeSchema = {",
					"    \"type\": \"integer\",",
					"    \"minimum\": 0,",
					"    \"maximum\": 2400,  // Isn't it bad if midnight has two representations?",
					"};",
					"",
					"var scheduleDaySchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"closes_at\": timeSchema,",
					"        \"day\": {",
					"            \"enum\": [",
					"                \"Sunday\",",
					"                \"Monday\",",
					"                \"Tuesday\",",
					"                \"Wednesday\",",
					"                \"Thursday\",",
					"                \"Friday\",",
					"                \"Saturday\",",
					"            ],",
					"        },",
					"        \"id\": idSchema,",
					"        \"opens_at\": timeSchema,",
					"    },",
					"};",
					"",
					"var scheduleSchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"id\": idSchema,",
					"        \"schedule_days\": {",
					"            \"type\": \"array\",",
					"            \"items\": scheduleDaySchema,",
					"        },",
					"    },",
					"    \"required\": [\"id\", \"schedule_days\"],",
					"};",
					"",
					"var serviceSchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"application_process\": {\"type\": [\"string\", \"null\"]},",
					"        \"categories\": {",
					"            \"type\": \"array\",",
					"            \"items\": categorySchema,",
					"        },",
					"        \"eligibility\": {\"type\": [\"string\", \"null\"]},",
					"        \"email\": {\"type\": [\"string\", \"null\"]},",
					"        \"fee\": {\"type\": [\"string\", \"null\"]},",
					"        \"id\": idSchema,",
					"        \"long_description\": {\"type\": \"string\"},",
					"        \"name\": {\"type\": \"string\"},",
					"        \"notes\": {",
					"            \"type\": \"array\",",
					"            \"items\": noteSchema,",
					"        },",
					"        \"required_documents\": {\"type\": [\"string\", \"null\"]},",
					"        \"schedule\": scheduleSchema,",
					"        \"verified_at\": {",
					"            \"type\": [\"string\", \"null\"],",
					"            \"format\": \"date-time\",",
					"        },",
					"        \"eligibilities\": eligibilitySchema,",
					"    },",
					"    \"required\": [",
					"        \"application_process\",",
					"        \"categories\",",
					"        \"eligibility\",",
					"        \"email\",",
					"        \"fee\",",
					"        \"id\",",
					"        \"long_description\",",
					"        \"name\",",
					"        \"notes\",",
					"        \"required_documents\",",
					"        \"schedule\",",
					"        \"verified_at\",",
					"        \"eligibilities\"",
					"    ],",
					"};",
					"",
					"var resourceSchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"address\": addressSchema,",
					"        \"categories\": {",
					"            \"type\": \"array\",",
					"            \"items\": categorySchema,",
					"        },",
					"        \"email\": {",
					"            \"type\": [\"string\", \"null\"],",
					"        },",
					"        \"id\": idSchema,",
					"        \"long_description\": {\"type\": \"string\"},",
					"        \"name\": {\"type\": \"string\"},",
					"        \"notes\": {",
					"            \"type\": \"array\",",
					"            \"items\": noteSchema,",
					"        },",
					"        \"phones\": {",
					"            \"type\": \"array\",",
					"            \"items\": phoneSchema,",
					"        },",
					"        \"ratings\": {",
					"            \"type\": \"array\",",
					"            // What is this? It's always empty",
					"        },",
					"        \"schedule\": scheduleSchema,",
					"        \"services\": {",
					"            \"type\": \"array\",",
					"            \"items\": serviceSchema,",
					"        },",
					"        \"short_description\": {\"type\": [\"string\", \"null\"]},",
					"        \"status\": {",
					"            \"enum\": [\"pending\", \"approved\", \"rejected\"],",
					"        },",
					"        \"verified_at\": {",
					"            \"type\": [\"string\", \"null\"],",
					"            \"format\": \"date-time\",",
					"        },",
					"        \"website\": {\"type\": [\"string\", \"null\"]},",
					"    },",
					"    \"required\": [",
					"        \"address\",",
					"        \"categories\",",
					"        \"email\",",
					"        \"id\",",
					"        \"long_description\",",
					"        \"name\",",
					"        \"notes\",",
					"        \"phones\",",
					"        \"ratings\",",
					"        \"schedule\",",
					"        \"services\",",
					"        \"short_description\",",
					"        \"status\",",
					"        \"verified_at\",",
					"        \"website\",",
					"    ],",
					"};",
					"",
					"var eligibilitySchema = {",
					"    \"type\": \"object\",",
					"    \"properties\": {",
					"        \"id\": idSchema,",
					"        \"name\": {\"type\": \"string\"},",
					"    },",
					"    \"required\": [\"id\", \"name\"],",
					"};",
					"",
					"pm.globals.set(\"schemas\", {",
					"    \"id\": idSchema,",
					"    \"address\": addressSchema,",
					"    \"category\": categorySchema,",
					"    \"note\": noteSchema,",
					"    \"phone\": phoneSchema,",
					"    \"time\": timeSchema,",
					"    \"scheduleDay\": scheduleDaySchema,",
					"    \"schedule\": scheduleSchema,",
					"    \"service\": serviceSchema,",
					"    \"resource\": resourceSchema,",
					"    \"eligibility\": eligibilitySchema",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6b7b8f81-513a-4ce9-a59b-5e5d31b7bb84",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}